# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'

parameters:
  - name: action
    displayName: Action
    type: string
    default: plan
    values:
      - plan
      - apply

  - name: overrideAction
    type: string
    default: plan
    values:
      - plan
      - apply
      - destroy


variables:
   timeoutInMinutes: 60
   agentPool: 'ubuntu-20.04'
   service_connection: 'DTS-CFTPTL-INTSVC'
   storage_account_rg: 'core-infra-intsvc-rg'
   storage_account_name: 'cftptlintsvc'
   build: $(Build.BuildNumber)
   terraformInitSubscription: 04d27a32-7a07-48b3-95b8-3c8691e1a263
   action:

stages:
  - stage: Precheck
    jobs:
      - job:
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-Sandbox'
              keyvaultSecret: 'azure-devops-sp-token'
              serviceConnection: 'DCD-CFT-Sandbox'
              overrideAction: ${{ parameters.overrideAction }}

       - stage: ${{ parameter.environment }}_${{ parameter.deployment }}
        displayName: ${{ parameter.environment }}_${{ parameter.deployment }}
        dependsOn: ${{ parameter.dependsOn }}
        jobs:
          - job:
            pool:
              vmImage: ${{ variables.agentPool }}
            steps:
              - template: pipeline-templates/terraform.yaml
                parameters:
                  environment: ${{ parameter.environment }}
                  overrideAction: ${{ parameters.overrideAction }}
                  component: "offboarding-alerts"
                  tfVarsFile: NULL
                  terraformInitSubscription: ${{ variables.terraformInitSubscription }}
                  serviceConnection: $(service_connection)